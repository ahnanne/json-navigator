{"version":3,"sources":["GlobalStyles.ts","components/Layout/style.ts","components/Layout/Snowfall.tsx","wasmLoader.ts","components/Layout/index.tsx","components/Heading/style.ts","components/Heading/index.tsx","styles/common.ts","components/FileUploader/style.ts","components/FileUploader/index.tsx","components/Search/style.ts","components/Search/index.tsx","utils/convertData.ts","components/DataTree/PropButton/style.ts","components/DataTree/PropButton/index.tsx","components/DataTree/style.ts","components/DataTree/index.tsx","containers/Home/index.tsx","pages/home/HomePage.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","Section","styled","section","Snowfall","canvasRef","useRef","wasm","setWasm","useState","handleClientResize","useCallback","debounce","current","width","document","documentElement","clientWidth","height","clientHeight","useEffect","async","console","log","response","fetch","bytes","arrayBuffer","instance","WebAssembly","instantiate","exports","error","loadWasm","then","canvas","ctx","getContext","init_snowflakes","snowflakes","Float32Array","memory","buffer","get_snowflakes","NUMBER_OF_SNOWFLAKES","render","update_snowflakes","clearRect","fillStyle","i","length","gradient","createRadialGradient","addColorStop","beginPath","arc","Math","PI","fill","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","requestAnimationFrame","window","addEventListener","removeEventListener","_jsx","ref","style","position","top","right","bottom","left","pointerEvents","Layout","_ref","children","_jsxs","Styled","H1","h1","Heading","m","margin","css","a11yHidden","buttonReset","ellipsis","buttonCommon","Container","div","Wrap","Label","label","Input","input","FileName","FileUploader","props","fileName","htmlFor","type","accept","id","onChange","e","file","target","files","setFileName","name","handleChange","reader","FileReader","readAsText","onload","_e$target","setFileData","JSON","parse","result","handleFileReader","HiddenLabel","Button","button","Search","setInput","value","onKeyDown","key","setKeyword","disabled","onClick","keyword","convertData","fileData","depth","obj","spl","prop","Object","assign","indent","Text","span","isSmall","isHighlighted","Value","_ref2","Icon","em","_ref3","showNestedObject","INDENT","PropButton","selected","setSelected","setShowNestedObject","isRender","includes","isSearching","handleClick","_Fragment","keys","map","DataTree","dataTree","HomeContainer","setDataTree","split","HomePage","App","Switch","Route","path","component","exact","ReactDOM","BrowserRouter","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ac8c748f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\nhtml, body {\r\n  background-color: #1a1a1a;\r\n  color: #fafafa;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Source Code Pro', \"Noto Sans KR\", sans-serif, 돋움, Dotum, 굴림, Gulim, \"Apple SD Gothic Neo\";\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  box-sizing: border-box;\r\n  min-width: 360px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n::selection {\r\n  background-color: #999ccc;\r\n}\r\n\r\nhtml, body, #root {\r\n  height: 100%;\r\n}\r\n\r\n* {\r\n  box-sizing: inherit;\r\n}\r\n\r\ninput, button, textarea {\r\n  font-family: inherit;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin: 0;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: calc(100vw - 240px);\r\n  min-width: 700px;\r\n  margin: 60px auto;\r\n`;\r\n","import { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { loadWasm, WasmExports } from \"wasmLoader\";\r\nimport { debounce } from 'lodash';\r\n\r\nconst NUMBER_OF_SNOWFLAKES = 300;\r\nconst SNOWFLAKE_FIELDS = 6; // 눈송이 구조체의 필드 개수\r\n\r\nconst Snowfall = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [wasm, setWasm] = useState<WasmExports | null>(null);\r\n\r\n  const handleClientResize = useCallback(\r\n    debounce(() => {\r\n      if (canvasRef.current) {\r\n        const width = document.documentElement.clientWidth;\r\n        const height = document.documentElement.clientHeight;\r\n    \r\n        canvasRef.current.width = width;\r\n        canvasRef.current.height = height;\r\n      }\r\n    }, 200),\r\n    [canvasRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadWasm().then((wasm) => {\r\n      if (wasm) {\r\n        setWasm(wasm);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!wasm) {\r\n      return;\r\n    }\r\n\r\n    const canvas = canvasRef.current;\r\n    if (canvas) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const width = document.documentElement.clientWidth;\r\n      const height = document.documentElement.clientHeight;\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      wasm.init_snowflakes(width, height);\r\n\r\n      // * wasm가 저장된 메모리 공간으로부터 눈송이 정보를 읽어서 Float32Array(4 byte 실수를 저장하는 배열)로 변환\r\n      const snowflakes = new Float32Array( // 숫자 하나 당 4 byte\r\n        wasm.memory.buffer, // 버퍼(wasm가 사용하는 메모리 공간 전체) - Emscripten 기본값은 16MB(256 페이지, byte length=16908288)\r\n        wasm.get_snowflakes(), // 버퍼의 어느 지점부터 데이터를 읽을지 전달\r\n        NUMBER_OF_SNOWFLAKES * SNOWFLAKE_FIELDS, // 읽어올 요소의 개수 (눈송이 100개 * 눈송이 구조체 필드 개수 -> 총 1200 byte)\r\n      );\r\n      // * 참고:\r\n      // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#buffer\r\n\r\n      const render = () => {\r\n        wasm.update_snowflakes(canvas.width, canvas.height);\r\n        \r\n        if (ctx) {\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          ctx.fillStyle = \"rgba(0, 0, 0, 0.1)\";\r\n\r\n          for (let i = 0; i < snowflakes.length; i += SNOWFLAKE_FIELDS) {\r\n            const gradient = ctx.createRadialGradient(\r\n              snowflakes[i],\r\n              snowflakes[i + 1],\r\n              0,\r\n              snowflakes[i],\r\n              snowflakes[i + 1],\r\n              snowflakes[i + 5],\r\n            );\r\n\r\n            gradient.addColorStop(\r\n              0,\r\n              `rgba(255, 255, 255, ${snowflakes[i + 4]})`\r\n            );\r\n            gradient.addColorStop(\r\n              0,\r\n              `rgba(210, 236, 242, ${snowflakes[i + 4]})`\r\n            );\r\n            gradient.addColorStop(\r\n              0,\r\n              `rgba(237, 247, 249, ${snowflakes[i + 4]})`\r\n            );\r\n\r\n            ctx.fillStyle = gradient;\r\n            ctx.beginPath();\r\n            ctx.arc(snowflakes[i], snowflakes[i + 1], snowflakes[i + 5], 0, Math.PI * 2);\r\n            ctx.fill();\r\n\r\n            ctx.shadowOffsetX = 0;\r\n            ctx.shadowOffsetY = 0;\r\n            ctx.shadowColor = \"#fafafa60\";\r\n            ctx.shadowBlur = 7;\r\n          }\r\n        }\r\n\r\n        requestAnimationFrame(render); // 애니메이션을 부드럽게 구현하기 위함. - cf.) setInterval()과 달리 탭이 비활성화되면 멈추므로 CPU 자원 절약\r\n        // * 참고:\r\n        // https://developer.mozilla.org/ko/docs/Web/API/Window/requestAnimationFrame\r\n      };\r\n\r\n      render();\r\n    }\r\n  }, [wasm]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleClientResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleClientResize);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, width: \"100vw\", height: \"100vh\", pointerEvents: \"none\"  }} />\r\n};\r\n\r\nexport default Snowfall;","// interface Snowflakes {\r\n//   x: number;\r\n//   y: number;\r\n//   speed: number;\r\n// }\r\n\r\nexport interface WasmExports {\r\n  /** 눈송이들 생성 */\r\n  init_snowflakes: (width: number, height: number) => void;\r\n  /** 눈송이들 좌표 변경 */\r\n  update_snowflakes: (width: number, height: number) => void;\r\n  /** 눈송이들 데이터가 저장된 메모리의 시작 위치(byte 단위)를 반환 */\r\n  get_snowflakes: () => number;\r\n  memory: Float32Array;\r\n}\r\n\r\nexport async function loadWasm() {\r\n  console.log('loadWasm 호출');\r\n  try {\r\n    const response = await fetch(\"/wasm/snowflakes.wasm\"); // WASM 파일 가져오기\r\n    const bytes = await response.arrayBuffer();\r\n    const { instance } = await WebAssembly.instantiate(bytes, {});\r\n\r\n    return instance.exports as unknown as WasmExports; // 타입 캐스팅\r\n  }\r\n  catch (error) {\r\n    console.error(\"Failed to load WASM: \", error);\r\n    return null;\r\n  }\r\n}","import { ReactNode } from \"react\";\r\nimport * as Styled from \"./style\";\r\n\r\nimport Snowfall from \"./Snowfall\";\r\n\r\nconst Layout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <Styled.Section>\r\n      {children}\r\n      <Snowfall />\r\n    </Styled.Section>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H1 = styled.h1`\r\n  font-size: 48px;\r\n  font-weight: 700;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as Styled from \"./style\";\r\n\r\ntype Props = {\r\n  m?: string;\r\n};\r\n\r\nconst Heading: React.FC<Props> = ({ m, children }) => {\r\n  return <Styled.H1 style={{ margin: m }}>{children}</Styled.H1>;\r\n};\r\n\r\nexport default Heading;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const hStack = css`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n`;\r\n\r\nexport const a11yHidden = css`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  clip: rect(0 0 0 0);\r\n  clip-path: polygon(0 0, 0 0, 0 0);\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const buttonReset = css`\r\n  background-color: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  padding: 0;\r\n  overflow: visible;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ellipsis = css`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const buttonCommon = css`\r\n  ${buttonReset}\r\n  border-radius: 5px;\r\n  color: #fafafa;\r\n  background-color: #999ccc90;\r\n  transition: background-color 100ms linear;\r\n\r\n  &:hover {\r\n    background-color: #999ccc;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ellipsis } from \"styles/common\";\r\n\r\nconst HEIGHT = 40;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n`;\r\n\r\nexport const Wrap = styled.div``;\r\n\r\nexport const Label = styled.label`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  padding: 0 20px;\r\n  vertical-align: middle;\r\n  background-color: #999ccc90;\r\n  height: ${HEIGHT}px;\r\n  line-height: ${HEIGHT}px;\r\n  border-radius: 5px;\r\n  transition: background-color 100ms linear;\r\n\r\n  &:hover {\r\n    background-color: #999ccc;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  border: 0;\r\n`;\r\n\r\nexport const FileName = styled.div`\r\n  height: ${HEIGHT}px;\r\n  border-bottom: 1px solid #ffffff60;\r\n  width: 400px;\r\n  margin-right: 20px;\r\n\r\n  > p {\r\n    ${ellipsis}\r\n    width: 100%;\r\n    font-size: 14px;\r\n    line-height: ${HEIGHT}px;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n","import * as Styled from \"./style\";\r\n\r\ntype Props = {\r\n  fileName: string;\r\n  setFileName: (name: string) => void;\r\n  setFileData: (data: { [key: string]: string } | null) => void;\r\n};\r\n\r\nconst FileUploader = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files;\r\n\r\n    if (file && file[0]) {\r\n      props.setFileName(file[0].name);\r\n    } else {\r\n      props.setFileName(\"\");\r\n    }\r\n  };\r\n\r\n  const handleFileReader = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    const file = e.target.files;\r\n\r\n    if (file && file[0]) {\r\n      reader.readAsText(file[0], \"UTF-8\");\r\n      reader.onload = (e: ProgressEvent<FileReader>) =>\r\n        props.setFileData(JSON.parse((e.target?.result as string) || \"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Styled.FileName>\r\n        <p>{props.fileName || \"파일을 선택해주세요..\"}</p>\r\n      </Styled.FileName>\r\n      <Styled.Wrap>\r\n        <Styled.Label htmlFor=\"file-uploader\">JSON 파일 업로드</Styled.Label>\r\n        <Styled.Input\r\n          type=\"file\"\r\n          accept=\".json\"\r\n          id=\"file-uploader\"\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            handleFileReader(e);\r\n          }}\r\n        />\r\n      </Styled.Wrap>\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n","import styled from \"styled-components\";\r\nimport { buttonCommon, a11yHidden } from \"styles/common\";\r\n\r\nexport const Container = styled.div`\r\n  flex-flow: row nowrap;\r\n  display: flex;\r\n  width: 600px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const HiddenLabel = styled.label`\r\n  ${a11yHidden}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  border: 0;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  ${buttonCommon}\r\n  width: 90px;\r\n  height: 40px;\r\n  padding: 0 10px;\r\n  margin-left: 10px;\r\n  word-break: keep-all;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    background-color: #999;\r\n    &:hover {\r\n      background-color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport * as Styled from \"./style\";\r\n\r\ntype Props = {\r\n  keyword: string;\r\n  setKeyword: (keyword: string) => void;\r\n};\r\n\r\nconst Search = (props: Props) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") props.setKeyword(input);\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Styled.HiddenLabel htmlFor=\"search-input\">검색</Styled.HiddenLabel>\r\n      <Styled.Input\r\n        id=\"search-input\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        onKeyDown={handleEnter}\r\n      />\r\n      <Styled.Button\r\n        disabled={input === \"\"}\r\n        onClick={() => props.setKeyword(input)}\r\n      >\r\n        property 검색\r\n      </Styled.Button>\r\n      <Styled.Button\r\n        disabled={props.keyword === \"\"}\r\n        onClick={() => {\r\n          props.setKeyword(\"\");\r\n          setInput(\"\");\r\n        }}\r\n      >\r\n        검색어 초기화\r\n      </Styled.Button>\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { NestedObjectType, ParsedDataType } from \"types/navigator\";\r\n\r\ntype Params = {\r\n  fileData: ParsedDataType;\r\n  depth: number;\r\n  obj: NestedObjectType;\r\n  spl: string[];\r\n  prop: string;\r\n};\r\n\r\nconst convertData = ({ fileData, depth, obj, spl, prop }: Params) => {\r\n  obj[spl[depth]] =\r\n    spl.length > depth + 1\r\n      ? obj[spl[depth]]\r\n        ? Object.assign(obj[spl[depth]], {})\r\n        : {}\r\n      : fileData[prop];\r\n\r\n  if (spl[depth + 1]) {\r\n    convertData({\r\n      fileData,\r\n      depth: depth + 1,\r\n      obj: obj[spl[depth]] as NestedObjectType,\r\n      spl,\r\n      prop,\r\n    });\r\n  }\r\n};\r\n\r\nexport default convertData;\r\n","import styled, { css } from \"styled-components\";\r\nimport { buttonCommon } from \"styles/common\";\r\n\r\nexport const Wrap = styled.div<{ indent?: string }>`\r\n  padding-left: ${({ indent }) => indent};\r\n  width: 100%;\r\n`;\r\n\r\ntype TextProp = {\r\n  isSmall?: boolean;\r\n  isHighlighted?: boolean;\r\n};\r\nexport const Text = styled.span<TextProp>`\r\n  display: inline-block;\r\n\r\n  line-height: 30px;\r\n  font-size: 16px;\r\n\r\n  ${(props) =>\r\n    props.isSmall &&\r\n    css`\r\n      line-height: 14px;\r\n      font-size: 14px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.isHighlighted &&\r\n    css`\r\n      color: #61e584;\r\n      font-weight: 700;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  ${buttonCommon}\r\n  width: 100%;\r\n  height: 30px;\r\n  margin-bottom: 10px;\r\n  padding-left: 8px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Value = styled.div<{ indent: string }>`\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  padding-left: ${({ indent }) => indent};\r\n`;\r\n\r\nexport const Icon = styled.em<{ showNestedObject: boolean }>`\r\n  display: inline-block;\r\n  font-style: normal;\r\n  font-size: 14px;\r\n  transform: ${({ showNestedObject }) =>\r\n    showNestedObject ? \"rotate(90deg)\" : \"\"};\r\n  transform-origin: 50%;\r\n  transition: all 100ms linear;\r\n  margin-right: 7px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { NestedObjectType } from \"types/navigator\";\r\nimport { DataTreeControlProps } from \"types/props\";\r\n\r\nimport * as Styled from \"./style\";\r\n\r\ntype Props = {\r\n  prop: string;\r\n  value: string | NestedObjectType;\r\n  id: string;\r\n  depth: number;\r\n};\r\n\r\nconst INDENT = \"20px\";\r\nconst PropButton = ({\r\n  prop,\r\n  value,\r\n  id,\r\n  depth,\r\n  selected,\r\n  setSelected,\r\n  keyword,\r\n}: Props & DataTreeControlProps) => {\r\n  const [showNestedObject, setShowNestedObject] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setShowNestedObject(!showNestedObject);\r\n    setSelected(id);\r\n  };\r\n\r\n  const isRender = selected && (selected.includes(id + \".\") || selected === id);\r\n  const isSearching = !!keyword.length;\r\n\r\n  useEffect(() => {\r\n    if (!isRender) {\r\n      setShowNestedObject(false);\r\n    }\r\n  }, [selected]);\r\n\r\n  return (\r\n    <Styled.Wrap>\r\n      <Styled.Button onClick={handleClick}>\r\n        <Styled.Icon aria-hidden showNestedObject={showNestedObject}>\r\n          ▶\r\n        </Styled.Icon>\r\n        <Styled.Text isHighlighted={isSearching && prop.includes(keyword)}>\r\n          {prop}\r\n        </Styled.Text>\r\n      </Styled.Button>\r\n      {showNestedObject && isRender && (\r\n        <>\r\n          {typeof value === \"string\" ? (\r\n            <Styled.Value indent={INDENT}>\r\n              <Styled.Text\r\n                isSmall\r\n                isHighlighted={isSearching && value.includes(keyword)}\r\n              >\r\n                {value}\r\n              </Styled.Text>\r\n            </Styled.Value>\r\n          ) : (\r\n            <Styled.Wrap indent={INDENT}>\r\n              {Object.keys(value).map((key) => (\r\n                <PropButton\r\n                  key={id + \".\" + key}\r\n                  prop={key}\r\n                  value={value[key]}\r\n                  id={id + \".\" + key}\r\n                  depth={depth + 1}\r\n                  selected={selected}\r\n                  setSelected={setSelected}\r\n                  keyword={keyword}\r\n                />\r\n              ))}\r\n            </Styled.Wrap>\r\n          )}\r\n        </>\r\n      )}\r\n    </Styled.Wrap>\r\n  );\r\n};\r\n\r\nexport default PropButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 600px;\r\n  margin-top: 40px;\r\n  padding: 20px 20px 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ffffff60;\r\n`;\r\n","import PropButton from \"./PropButton\";\r\n\r\nimport { NestedObjectType } from \"types/navigator\";\r\nimport { DataTreeControlProps } from \"types/props\";\r\n\r\nimport * as Styled from \"./style\";\r\n\r\ntype Props = {\r\n  dataTree: NestedObjectType;\r\n};\r\n\r\nconst DataTree = ({\r\n  dataTree,\r\n  selected,\r\n  setSelected,\r\n  keyword,\r\n}: Props & DataTreeControlProps) => {\r\n  return (\r\n    <Styled.Container>\r\n      {Object.keys(dataTree).map((key) => (\r\n        <PropButton\r\n          key={key}\r\n          prop={key}\r\n          value={dataTree[key]}\r\n          id={key}\r\n          depth={0}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          keyword={keyword}\r\n        />\r\n      ))}\r\n    </Styled.Container>\r\n  );\r\n};\r\n\r\nexport default DataTree;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Layout from \"components/Layout\";\r\nimport Heading from \"components/Heading\";\r\nimport FileUploader from \"components/FileUploader\";\r\nimport Search from \"components/Search\";\r\n\r\nimport convertData from \"utils/convertData\";\r\n\r\nimport { NestedObjectType, ParsedDataType } from \"types/navigator\";\r\nimport DataTree from \"components/DataTree\";\r\n\r\nconst HomeContainer = () => {\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [fileData, setFileData] = useState<ParsedDataType | null>(null);\r\n  const [dataTree, setDataTree] = useState<NestedObjectType | null>(null);\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (fileData) {\r\n      const obj: NestedObjectType = {};\r\n      const isSearching = !!keyword.length;\r\n\r\n      for (const prop in fileData) {\r\n        if (isSearching) {\r\n          if (!prop.includes(keyword)) continue;\r\n        }\r\n\r\n        const spl = prop.split(\".\");\r\n        convertData({\r\n          fileData,\r\n          depth: 0,\r\n          obj,\r\n          spl,\r\n          prop,\r\n        });\r\n      }\r\n\r\n      setDataTree(obj);\r\n    }\r\n  }, [fileData, keyword]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Heading m=\"0 0 50px\">json-navigator🧭</Heading>\r\n      <FileUploader\r\n        fileName={fileName}\r\n        setFileName={setFileName}\r\n        setFileData={setFileData}\r\n      />\r\n      {dataTree && (\r\n        <>\r\n          <Search keyword={keyword} setKeyword={setKeyword} />\r\n          <DataTree\r\n            dataTree={dataTree}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n            keyword={keyword}\r\n          />\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","import HomeContainer from \"containers/Home\";\r\n\r\nconst HomePage = () => <HomeContainer />;\r\n\r\nexport default HomePage;\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport GlobalStyles from \"GlobalStyles\";\r\nimport HomePage from \"pages/home/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}